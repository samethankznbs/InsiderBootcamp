Projeyi ilk olarak açtığımda hataları yakalamak adına tasarlanan arayüzü kurcaladım ve ilk görüşte yakaladığım hatalar şunlar:
1. Kullanıcı herhangi bir ürünün sepete ekle butonuna bastığında ilgili ürünün stok sayısından bağımsız sepete ekleme yapabiliyor.
2. Sepete eklenen ürünler sepetten silindiğinde ve sonrasında herhangi bir ürün sepete eklendiğinde önceden sepete eklenmiş ilgili ürünlerin stok sayısında bir adet artış gözlemleniyor.(Başlangıç stoğundan bağımsız bir artış oluyor).
3. Sepetin toplam ücreti eklenen ürünlerin adetinden bağımsız olarak sadece ilgili ürünlerin birim fiyatı toplanarak yapılıyor.
4. Muhtemel bir yanlış indirim kodu girildiğinde hata mesajı birden fazla kez yan yana yazdırılıyor.


Kodun Analizi ve Debug işlemi ;

İlk olarak kodda "window" global değişkeninin app özelliğine kendimizin tanımladığı app nesnesi eşitleniyor. Burada App nesnesinin kurucu methodunu kontrol etmekle işe başladım;


	1.App nesnesinin kurucu methodunda window.cart ShoppingCart sınıfından bir nesneye eşitlendi. ShoppingCart sınıfının kurucu methodunu kontrol ettiğimizde ise items(sepetteki ürünler),total(ürünlerin toplam değeri) değerleri boş ve 0 olarak atanıyor , discountApplied(indirim uygulanıp uygulanmadığı) değeri ise false değerine eşitleniyordu.
	2.App nesnesinin kurunucu methodunda yapılan bir diğer işlem yine bu sınıfta yer alan initializeEventListeners methodunu çağırıyor. Bu methodu incelediğimizde ;
		1.Sayfanın HTML yapısı tamamen yüklendiğinde çalışan bu kısım ilk olarak yine bu sınıfta bulunan renderProducts fonksiyonunu çağırıyor.
			1.renderProducts fonksiyonunda ilk olarak dökümandan "products" sınıfını içeren element çekiliyor.Bu divin altına ilgili ürünler eklenecek. eğer böyle bir element varsa kontrolü yapılarak, JS dosyamızın başında tanımladığımız products dizisi içindeki ürün objeleri teker teker ilgili html yapısıyla product-card olarak products divine ekleniyor. Burada tüm elemanlar doğru eklenmiş diye kontrol etmek için join fonksiyonundan sonra bir breakpoint koyarak ilgili div classının içini kontrol ettim ve tüm elemanlar doğru çekilmişti. Ayrıca eklenen kartların içinde yer alan Sepete Ekle butonu on click olarak app.addToCart foksiyonunu tetikliyor. Ayrıca ürünün stoğu 0 ise buton deaktif oluyor. Bunu kontrol etmek için kodun başında tanımladığımız products dizisindeki bir ürünün stoğunu 0 olarak değiştirdim ve ilgili ürün sepete ekle butonuna bastığımda ilgili ürün eklenmedi. Yani bu kısım da doğru çalışıyor.
				1.product-cardın içindeki butona bastığımızda çağırılan addToCart fonksiyonununu incelediğimizde fonksiyon ilgili ürünün id değerini alıyor ve sonrasında ShoppingCart sınıfının altında yer alan addItem fonksiyonunu çağırıyor. Bu fonksiyon hem ürnün id değeri hem de undefined br değişkeni almış. addItem fonksiyonunu incelediğimizde :
					1.addItem fonksiyonunda ürün id si ve undefined değeri olarak da quantity değeri 1 olarak tanımlanmış. ilk olarak ürün idsi ile başta tanımladığımız products dizisi içinde bir kontrol yapılıyor ve ürününün olup olmadığı kontrol ediliyor. Burada bir problem olup olmadığını kontrol etmek için find methodundan sonra beakpoint koydum ve ilgili ürünün doğru tanımlandığını gördüm. Sonrasına bir stok kontrolü  yapıldığını gördüm. burada stock değeri quatityden küçük eşitse bir erorr vermesi istenmiş  fakat burada küçük eşittir yerine küçüktür kullanılması gerekiyor.Çünkü eşit olma durumunda da kullanıcı son ürünü ekleyebilmesi gerekir. Bu kısımdaki quantity değerinin anlık değişimini ve mantığını anlayabilmek için buraya her girdiğinde konsola quantityi ve ürünün stoğunu yazdırmasını istedim. Kontrolleri yaptığımda quantity değerinin her zaman bir geldiği ve stock değerinin de aynen yazıldığını gördüm. Buradaki asıl problem kullanıcı bir ürünün stok sayısından fazla bir şekilde sepete ekleme yapabiliyordu.Bunu düzeltmek adına sepete ürün eklendiğinde ürün stoğunu azaltmak olabilir. Çünkü ürün kartlarındaki sepete ekle butonu eğer ilgili ürünün stoğu 0 olması durmunda deaktif oluyor. Bu nedenle her sepete ekleme işlemi yaptığımızda ürün stoğundan bir azaltarak bu problem çözebiliz. Fonksiyonun devamını imcelediğimizde bir existingItem tanımlanmış. bu item aslında ShoppingCart nsnemizin içince yer alan items dizisini kontrl ediyor. Bu dizi bizim sepettteki ürün bilgilerimizi ve ilgili ürünü adetini tutuor. ğer bir ürün önceden sepette varsa o ürünün sadece quantity değeri artırılıyor, eğer yoksa da ürün bilgileriyle beraber push methoduyla diziye ekleniyor. her iki blockta da ekleme işleminden sonra ilgili ürünün stock değişkenini quantity(1) kadar azatmalıyız.
Kodu bu şekilde güncelledim. Fonksiyonun devamında yine bu sınıfta bulunan calculateTotal ve updateUI fonksiyonları çağırılıyor.
						1.calculateTotal fonksyonunu incelediğimizde burada sepetteki ürünler yani items dizisi gezilerek yine bu sınıfta bulunan total değişkenine atama yapılıyor. İlgili kısıma breakpoint koyarak toplam sepet tutarını gözlemledim. Burada ürünlerin toplam değeri hesaplanırken sadece ürününlerin birim fiyatları toplanarak hesaplanmış.  Hesaplamada ilgili ürünün quantity değeri de çarpılarak hesap edilmeli. Bu nedenle kodu ilgili şekilde güncelledim. Ayrıca bu fonksiyonda bir de indirim işlemi uygulanıyor. Eğer discountApplied değerimiz true ise ve sepetimizdeki total değer 0 dan büyükse(ürün varsa) toplam değer üzerinden indirim uygulanmış. Fakrat burada da bir hata var . Kodun genel yapısına baktığımızda yüzde 10 indirim uygulamak istiyoruz. Fakat bu matematiksel işlem yaklaşık yüzde 90 lık bir indirim uyguluyor. Buradaki matematiksel işlemi de güncellememiz gerekiyor. İlgili kısmı güncelleyerek yüzde 10 luk bir indirim ile hesaplamasını sağladım.
						2.updateUI fonksiyonunu incelediğimizde bu fonskiyon sepette bir değişim olduğunda aslında buraya ürünlerin kartlarının ve sepet toplam tutarını eklemesini yapan bir fonksiyon. Öncelikle fonksiyonda dökümandaki cart ve total classlarına sahip elementler kontrol ediliyor. eğer iki elementte varsa. sepetteki ürünlerimizi tutan items dizisinin içindeki ürünler gezilerek her bir ürün için sepete cart-item sınıfından bir cart ekleniyor. Burada ekleme doğru yapıldı mı kontrolünü yapabilmek için ilgili kısma bir breakpoint ekleyerek cart sınıfının altındaki childları consolda kontrol ettim ve kontrolüm sonucu doğru ekleme yapıldığına karar verdim. Ayrıca sepet tutarı da doğru yazılıyordu. cart-item ların içinde her biri için bir sil butonu var. bu buton yine bu sınıftaki removeItem fonksiyonunu çağırıyor ve parametre olarak ilgili kartın idsini kullanıyor.
							1.removeItem fonksiyonunu incelediğimizde aldığı id  değerini sepetimizdeki ürünleri tutan items dizisinde id ile arama yaparak kullanıyor ve sonrasında ilgili ürünün idsini itemIndex değişkenine atıyor. Sonrasında itemIndex üzerinden kontrol yapılarak ürünün septte olup olmadığı kontrol ediliyor. Eğer yoksa hata gönderiliyor. Varsa ilgili index kullanılarak items dizisi içinden bir ürün item değişkenine tanımlanıyor. Sonrasında bir product tanımlanarak scriptin başında tanımladığımız products dizisi içinden bu fonksiyona gelen id ile arama yapılıp producta tanımlanıyor. eğer ilgili product varsa ürünün stok sayısında güncelleme yapmamız gerekiyo. fakat burada sadece sile basıldığında ürünün sayısı 1 arttırılmış. İlgili ürünün quantity sayısı kullanılarak arttırılma yapılması gerekiyor. Burada da tanımladığımız item değişkeninin item.quantity değerini product.stock değerine ekleyerek bu problemi çözebiliriz. Burda da şöyle bir problem oldu. Örnek olarak addItem fonksiyonunu çağırdığımızda yani anlık olarak sepete ekleme yaptığımızda stok sayısının azaldığını görebiliyoruz fakat  sepetten silme işlemi yaptığımızda bu durum geçerli olmuyor. Sildiğimiz ürünün değeri html tarafında güncellenmiyor. Burada kontrol yapmak adına silme işlemlerinden sonra products dizisinin içini kontol etmeye karar verdim ve bir breakpoint ekledim. Ypatığım kontrolde products değeri tam olarak istediğim gibi güncellenmekte fakat herhangi bir ürün için sepetten kaldırma işlemi yapıldığında ürün listesindeki stok sayısı products güncellenmesine rağmen güncellenmiyor. Fonksiyoınun sonunda çağırılan calculateTotal fonksiyonu doğru çalışsa da updateUI fonksiyonunda yanlışlık olduğunu düşünüyorum. İsimlendirilmesine göre update işleminde tüm anasaydfadaki güncellemeleri yapması gerek. Bu nedenle bu fonksiyonun içini tekrardan products dizisini dönerek güncel products değerlerini kart olarak ekleyen kısmı ekledim. Böylece stok durumları ekranda da anlık olarak güncellenerek değiştirilebildi. Ayrıca projeye yorum satırı olarak eklediğim bir diğer removeItem fonskiyonu ilgili ürünün sil butonuna basınca ürün üzerinden tek tek bir azaltma yaparak karttan siliyor. Proje yapısı başta bu şekilde olduğu için fonksiyonu direkt böyle güncellemek istemedim. Fakat yorum satırı olarak projeye ekledim.

 
		2.Sayfanın HTML yapısı tamamen yüklendiğinde çalışan ve renderProducts fonskiynundan sonra çağırılan yine bu sınıfta tanımlanmış setupEventHandlers fonksiyonu çağırılıyor.
			1.setupEventHandlers fonksiyonunda fonksiyonunda ilk olarak dökümandan "discount-form" sınıfını içeren element çekiliyor. eğer böyle bir element varsa kontrolü yapılarak, ilgili forma bir submit eventi ekliyor bu event aslında indirim uygulama eventi.preventDefault ile sayfanın yenilenmesi engelleniyor.ardından "discount-code" divinde yer alan yani inputta yer alan indirim kodunu içeren değişken alınarak ShoppingCart sınıfının altında yer alan applyDiscount methoduna gönderiliyor.
				1.applyDiscount fonksiyonunu incelediğimizde bu fonksiyon ekrandaki discount-code idli inputun değerini parametrer olarak alıyor. Eğer ilgili değer 'INDIRIM10' değerine eşitse ve ilgili sepetin discountApplied değeri false ise bu sepete indirim uygulanabilir demektir. discountApplied değeri true yapılır.calculateTotal ve updateUI fonksiyonları çağırılarak html sayfası güncellenir ve ardından ekrana ilgili Show mesajları gönderilir. Bu kısımı incelediğimde sepette herhangi bir ürün yokken de doğru kodu girince mesaj iletiyor. Ayrıca mesajlar yan yana da eklenebiliyor. Burada daha güzel bir arayüz oluşturmak için applyDiscount içeriğini güncelledim ve koşullara göre farklı bir yapı oluşturdum. Ayrıca içerisinde çağırdığımız showMessage ve showError fonksiyonlarını da güncelleyerek gönderilen hata mesajlarının belli bir süre sonra yok olmasını sağladım. Ayrıca normal mesajlardan indirim uygulandı mesajını kalıcı hale getirerek daha kullanışlı bir arayüz oluşturdum.
			2.Kodun devam eden kısımında bir EventListener tanımlanmış. Bu listener sayesinde products kısmındaki güncellenmesi gereken stokları tekrardan renderProducts fonksiyonunu çağırarark üncelleyen bir kısım. Aslında benim updateUI fonksiyonunu güncelleyerek tekraradan products içini gezereek güncellediğim kısmı çözebilecek bir listener. Bu nedenle updateUI fonksiyonu içinde yaptığım güncellemeyi yorum satırına alarak removeItem fonksiyonu içerisinde bu eventi document.dispatchEvent(new Event('stockUpdate')); şeklinde çağırdım. Böylece sepetten her ürün silindiğinde tekrardan ürün kartlarındaki stoklar güncellendi.


Böylece projedeki görebildiğim hataların hepsini düzeltebildim.

